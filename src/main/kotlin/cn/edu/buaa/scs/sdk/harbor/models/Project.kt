/**
 * Harbor API
 *
 * These APIs provide services for manipulating Harbor project.
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package cn.edu.buaa.scs.sdk.harbor.models

import com.fasterxml.jackson.annotation.JsonProperty

/**
 *
 *
 * @param projectId Project ID
 * @param ownerId The owner ID of the project always means the creator of the project.
 * @param name The name of the project.
 * @param registryId The ID of referenced registry when the project is a proxy cache project.
 * @param creationTime The creation time of the project.
 * @param updateTime The update time of the project.
 * @param deleted A deletion mark of the project.
 * @param ownerName The owner name of the project.
 * @param togglable Correspond to the UI about whether the project's publicity is  updatable (for UI)
 * @param currentUserRoleId The role ID with highest permission of the current user who triggered the API (for UI).  This attribute is deprecated and will be removed in future versions.
 * @param currentUserRoleIds The list of role ID of the current user who triggered the API (for UI)
 * @param repoCount The number of the repositories under this project.
 * @param chartCount The total number of charts under this project.
 * @param metadata
 * @param cveAllowlist
 */

data class Project(

    /* Project ID */
    @field:JsonProperty("project_id")
    val projectId: kotlin.Int? = null,

    /* The owner ID of the project always means the creator of the project. */
    @field:JsonProperty("owner_id")
    val ownerId: kotlin.Int? = null,

    /* The name of the project. */
    @field:JsonProperty("name")
    val name: kotlin.String? = null,

    /* The ID of referenced registry when the project is a proxy cache project. */
    @field:JsonProperty("registry_id")
    val registryId: kotlin.Long? = null,

    /* The creation time of the project. */
    @field:JsonProperty("creation_time")
    val creationTime: java.time.OffsetDateTime? = null,

    /* The update time of the project. */
    @field:JsonProperty("update_time")
    val updateTime: java.time.OffsetDateTime? = null,

    /* A deletion mark of the project. */
    @field:JsonProperty("deleted")
    val deleted: kotlin.Boolean? = null,

    /* The owner name of the project. */
    @field:JsonProperty("owner_name")
    val ownerName: kotlin.String? = null,

    /* Correspond to the UI about whether the project's publicity is  updatable (for UI) */
    @field:JsonProperty("togglable")
    val togglable: kotlin.Boolean? = null,

    /* The role ID with highest permission of the current user who triggered the API (for UI).  This attribute is deprecated and will be removed in future versions. */
    @field:JsonProperty("current_user_role_id")
    val currentUserRoleId: kotlin.Int? = null,

    /* The list of role ID of the current user who triggered the API (for UI) */
    @field:JsonProperty("current_user_role_ids")
    val currentUserRoleIds: kotlin.collections.List<kotlin.Int>? = null,

    /* The number of the repositories under this project. */
    @field:JsonProperty("repo_count")
    val repoCount: kotlin.Int? = null,

    /* The total number of charts under this project. */
    @field:JsonProperty("chart_count")
    val chartCount: kotlin.Int? = null,

    @field:JsonProperty("metadata")
    val metadata: ProjectMetadata? = null,

    @field:JsonProperty("cve_allowlist")
    val cveAllowlist: CVEAllowlist? = null

)

