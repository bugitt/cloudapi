/**
 * Harbor API
 *
 * These APIs provide services for manipulating Harbor project.
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package cn.edu.buaa.scs.sdk.harbor.models

import com.fasterxml.jackson.annotation.JsonProperty

/**
 *
 *
 * @param id The ID of the artifact
 * @param type The type of the artifact, e.g. image, chart, etc
 * @param mediaType The media type of the artifact
 * @param manifestMediaType The manifest media type of the artifact
 * @param projectId The ID of the project that the artifact belongs to
 * @param repositoryId The ID of the repository that the artifact belongs to
 * @param digest The digest of the artifact
 * @param propertySize The size of the artifact
 * @param icon The digest of the icon
 * @param pushTime The push time of the artifact
 * @param pullTime The latest pull time of the artifact
 * @param extraAttrs
 * @param annotations
 * @param references
 * @param tags
 * @param additionLinks
 * @param labels
 * @param scanOverview The scan overview attached in the metadata of tag
 */

data class Artifact(

    /* The ID of the artifact */
    @field:JsonProperty("id")
    val id: kotlin.Long? = null,

    /* The type of the artifact, e.g. image, chart, etc */
    @field:JsonProperty("type")
    val type: kotlin.String? = null,

    /* The media type of the artifact */
    @field:JsonProperty("media_type")
    val mediaType: kotlin.String? = null,

    /* The manifest media type of the artifact */
    @field:JsonProperty("manifest_media_type")
    val manifestMediaType: kotlin.String? = null,

    /* The ID of the project that the artifact belongs to */
    @field:JsonProperty("project_id")
    val projectId: kotlin.Long? = null,

    /* The ID of the repository that the artifact belongs to */
    @field:JsonProperty("repository_id")
    val repositoryId: kotlin.Long? = null,

    /* The digest of the artifact */
    @field:JsonProperty("digest")
    val digest: kotlin.String? = null,

    /* The size of the artifact */
    @field:JsonProperty("size")
    val propertySize: kotlin.Long? = null,

    /* The digest of the icon */
    @field:JsonProperty("icon")
    val icon: kotlin.String? = null,

    /* The push time of the artifact */
    @field:JsonProperty("push_time")
    val pushTime: java.time.OffsetDateTime? = null,

    /* The latest pull time of the artifact */
    @field:JsonProperty("pull_time")
    val pullTime: java.time.OffsetDateTime? = null,

    @field:JsonProperty("extra_attrs")
    val extraAttrs: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    @field:JsonProperty("annotations")
    val annotations: kotlin.collections.Map<kotlin.String, kotlin.String>? = null,

    @field:JsonProperty("references")
    val references: kotlin.collections.List<Reference>? = null,

    @field:JsonProperty("tags")
    val tags: kotlin.collections.List<Tag>? = null,

    @field:JsonProperty("addition_links")
    val additionLinks: kotlin.collections.Map<kotlin.String, AdditionLink>? = null,

    @field:JsonProperty("labels")
    val labels: kotlin.collections.List<Label>? = null,

    /* The scan overview attached in the metadata of tag */
    @field:JsonProperty("scan_overview")
    val scanOverview: kotlin.collections.Map<kotlin.String, NativeReportSummary>? = null

)

