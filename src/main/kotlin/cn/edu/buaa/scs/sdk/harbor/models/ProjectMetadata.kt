/**
 * Harbor API
 *
 * These APIs provide services for manipulating Harbor project.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package cn.edu.buaa.scs.sdk.harbor.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * 
 *
 * @param `public` The public status of the project. The valid values are \"true\", \"false\".
 * @param enableContentTrust Whether content trust is enabled or not. If it is enabled, user can't pull unsigned images from this project. The valid values are \"true\", \"false\".
 * @param enableContentTrustCosign Whether cosign content trust is enabled or not. If it is enabled, user can't pull images without cosign signature from this project. The valid values are \"true\", \"false\".
 * @param preventVul Whether prevent the vulnerable images from running. The valid values are \"true\", \"false\".
 * @param severity If the vulnerability is high than severity defined here, the images can't be pulled. The valid values are \"none\", \"low\", \"medium\", \"high\", \"critical\".
 * @param autoScan Whether scan images automatically when pushing. The valid values are \"true\", \"false\".
 * @param reuseSysCveAllowlist Whether this project reuse the system level CVE allowlist as the allowlist of its own.  The valid values are \"true\", \"false\". If it is set to \"true\" the actual allowlist associate with this project, if any, will be ignored.
 * @param retentionId The ID of the tag retention policy for the project
 */

data class ProjectMetadata (

    /* The public status of the project. The valid values are \"true\", \"false\". */
    @field:JsonProperty("public")
    val `public`: kotlin.String? = null,

    /* Whether content trust is enabled or not. If it is enabled, user can't pull unsigned images from this project. The valid values are \"true\", \"false\". */
    @field:JsonProperty("enable_content_trust")
    val enableContentTrust: kotlin.String? = null,

    /* Whether cosign content trust is enabled or not. If it is enabled, user can't pull images without cosign signature from this project. The valid values are \"true\", \"false\". */
    @field:JsonProperty("enable_content_trust_cosign")
    val enableContentTrustCosign: kotlin.String? = null,

    /* Whether prevent the vulnerable images from running. The valid values are \"true\", \"false\". */
    @field:JsonProperty("prevent_vul")
    val preventVul: kotlin.String? = null,

    /* If the vulnerability is high than severity defined here, the images can't be pulled. The valid values are \"none\", \"low\", \"medium\", \"high\", \"critical\". */
    @field:JsonProperty("severity")
    val severity: kotlin.String? = null,

    /* Whether scan images automatically when pushing. The valid values are \"true\", \"false\". */
    @field:JsonProperty("auto_scan")
    val autoScan: kotlin.String? = null,

    /* Whether this project reuse the system level CVE allowlist as the allowlist of its own.  The valid values are \"true\", \"false\". If it is set to \"true\" the actual allowlist associate with this project, if any, will be ignored. */
    @field:JsonProperty("reuse_sys_cve_allowlist")
    val reuseSysCveAllowlist: kotlin.String? = null,

    /* The ID of the tag retention policy for the project */
    @field:JsonProperty("retention_id")
    val retentionId: kotlin.String? = null

)

