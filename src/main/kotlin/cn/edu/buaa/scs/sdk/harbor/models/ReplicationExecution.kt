/**
 * Harbor API
 *
 * These APIs provide services for manipulating Harbor project.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package cn.edu.buaa.scs.sdk.harbor.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * The replication execution
 *
 * @param id The ID of the execution
 * @param policyId The ID if the policy that the execution belongs to
 * @param status The status of the execution
 * @param trigger The trigger mode
 * @param startTime The start time
 * @param endTime The end time
 * @param statusText The status text
 * @param total The total count of all executions
 * @param failed The count of failed executions
 * @param succeed The count of succeed executions
 * @param inProgress The count of in_progress executions
 * @param stopped The count of stopped executions
 */

data class ReplicationExecution (

    /* The ID of the execution */
    @field:JsonProperty("id")
    val id: kotlin.Int? = null,

    /* The ID if the policy that the execution belongs to */
    @field:JsonProperty("policy_id")
    val policyId: kotlin.Int? = null,

    /* The status of the execution */
    @field:JsonProperty("status")
    val status: kotlin.String? = null,

    /* The trigger mode */
    @field:JsonProperty("trigger")
    val trigger: kotlin.String? = null,

    /* The start time */
    @field:JsonProperty("start_time")
    val startTime: java.time.OffsetDateTime? = null,

    /* The end time */
    @field:JsonProperty("end_time")
    val endTime: java.time.OffsetDateTime? = null,

    /* The status text */
    @field:JsonProperty("status_text")
    val statusText: kotlin.String? = null,

    /* The total count of all executions */
    @field:JsonProperty("total")
    val total: kotlin.Int? = null,

    /* The count of failed executions */
    @field:JsonProperty("failed")
    val failed: kotlin.Int? = null,

    /* The count of succeed executions */
    @field:JsonProperty("succeed")
    val succeed: kotlin.Int? = null,

    /* The count of in_progress executions */
    @field:JsonProperty("in_progress")
    val inProgress: kotlin.Int? = null,

    /* The count of stopped executions */
    @field:JsonProperty("stopped")
    val stopped: kotlin.Int? = null

)

