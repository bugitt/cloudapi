openapi: 3.0.0
info:
  title: cloudapi_v2
  version: '2.0'
  description: buaa scs cloud api v2
  license:
    name: MIT
  contact:
    name: loheagn
    email: loheagn@icloud.com
  termsOfService: 'https://scs.buaa.edu.cn'
tags:
  - name: General
    description: 通用接口
  - name: 人员
    description: 人员管理相关
  - name: 课程
    description: 课程相关
  - name: 作业
    description: 作业相关
  - name: 文件
    description: 文件相关
  - name: 课程资源
    description: 课程资源相关
  - name: 统计
    description: 获取各种统计信息
  - name: 互评
    description: 互评相关接口
  - name: 鉴权
    description: 身份认证相关接口
  - name: 虚拟机
    description: 虚拟机相关接口
  - name: 项目
    description: 项目相关接口
  - name: 代码仓库
    description: 代码仓库相关接口
  - name: 镜像
    description: 镜像相关接口
  - name: 容器服务
    description: 容器服务相关接口
  - name: 日志管理
    description: 日志管理相关接口
servers:
  - url: 'https://scs.buaa.edu.cn/api/v2'
paths:
  '/experiment/{experimentId}':
    parameters:
      - schema:
          type: integer
        name: experimentId
        in: path
        required: true
    get:
      summary: 获取一项实验（作业）
      tags:
        - 作业
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentResponse'
      operationId: get-experiment-experimentId
      description: 获取一项实验（作业）详情
      security:
        - Authorization: []
      parameters:
        - schema:
            type: boolean
          in: query
          name: getWorkflowConfiguration
    put:
      summary: 修改实验/作业信息
      operationId: put-experimnet-experimentId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentResponse'
      description: 教师或助教修改实验/作业信息
      tags:
        - 作业
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutExperimentRequest'
      security:
        - Authorization: []
  '/experiment/{experimentId}/assignment':
    parameters:
      - schema:
          type: integer
          format: int32
        name: experimentId
        in: path
        required: true
    post:
      summary: 创建作业
      tags:
        - 作业
      operationId: post-experiment-experimentId-assignment
      security:
        - Authorization: []
      description: 第一次上传作业
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentRequest'
  '/experiment/{experimentId}/assignments':
    parameters:
      - schema:
          type: integer
          format: int32
        name: experimentId
        in: path
        required: true
    get:
      summary: 获取实验（作业）下学生提交的作业信息
      operationId: get-experiment-experimentId-assignment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentListResponse'
      description: |-
        获取实验（作业）下学生提交的作业信息

        如果是当前课程的教师或助教调用，则返回当前实验的全部作业

        否则，仅返回当前学生的作业
      security:
        - Authorization: []
      tags:
        - 作业
  '/experiment/{experimentId}/assignment/{assignmentId}':
    parameters:
      - schema:
          type: integer
        name: experimentId
        in: path
        required: true
      - schema:
          type: integer
        name: assignmentId
        in: path
        required: true
    patch:
      summary: 修改作业
      operationId: patch-experiment-experimentId-assignment
      security:
        - Authorization: []
      description: 重复上传作业，直接覆盖之前的作业
      tags:
        - 作业
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchAssignmentRequest'
    get:
      summary: 查看作业
      operationId: get-experiment-experimentId-assignment-assignmentId
      security:
        - Authorization: []
      description: 查看某次作业的详细信息
      tags:
        - 作业
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentResponse'
  '/file/{fileId}':
    parameters:
      - schema:
          type: integer
        name: fileId
        in: path
        required: true
    get:
      summary: 获取文件元信息
      tags:
        - 文件
      operationId: get-file-fileId
      security:
        - Authorization: []
      description: 获取文件的元信息
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
  '/file/{fileId}/content':
    parameters:
      - schema:
          type: integer
          format: int32
        name: fileId
        in: path
        required: true
    get:
      summary: 下载文件
      tags:
        - 文件
      operationId: get-file-fileId-content
      description: |-
        下载文件
        文件的一些元信息（名称、format-type）等展示在相应的header中

        该接口的response是一个二进制字节流，即为文件的内容
      security:
        - Authorization: []
      parameters: []
      responses:
        '200':
          description: OK
          headers:
            content-disposition:
              schema:
                type: string
                example: attachment; filename=%E6%9D%8E%E6%A5%A0_15131049_%E6%B5%8B%E8%AF%95%E4%BD%9C%E4%B8%9A02.doc
              description: 可以从该header中检出文件名。从示例中可以看出，filename之后的内容为文件名（未防止乱码，文件名使用了URL编码，使用时可以重新解码）
            content-type:
              schema:
                type: string
              description: 描述了文件的mimetype
            file-size:
              schema:
                type: integer
                format: int64
              description: 文件大小
  /file:
    post:
      summary: 创建或修改文件
      operationId: post-file
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadFileResponse'
      tags:
        - 文件
      description: 上传新文件，或修改旧文件。如果请求体中的fileId为空或为0，那么为创建新文件，或者为修改旧文件
      security:
        - Authorization: []
      parameters:
        - schema:
            type: string
          in: query
          name: owner
          required: true
        - schema:
            type: string
          in: query
          name: fileType
          required: true
        - schema:
            type: integer
            format: int32
          in: query
          name: involvedId
          required: true
        - schema:
            type: string
          in: query
          name: fileId
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadFileRequest'
        description: 在创建文件时，支持传入多个fileItem。注意：如果fileId不为空且不为0时，传入多个fileItem，那么行为不可控
  /file/package:
    get:
      summary: 下载打包好的zip
      tags:
        - 文件
      responses:
        '200':
          description: OK
          headers:
            content-length:
              schema:
                type: string
            content-disposition:
              schema:
                type: string
                example: attachment; filename=package.zip
          content:
            application/zip:
              schema:
                type: object
                properties: {}
      operationId: get-file-package
      description: 打包下载文件，如下载当前实验的全部作业，或下载当前课程的全部资源
      security:
        - Authorization: []
      parameters:
        - schema:
            type: string
          in: query
          name: packageId
          required: true
        - schema:
            type: string
            format: int32
          in: query
          name: packageName
          required: true
    post:
      summary: 触发打包动作
      operationId: post-file-package
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilePackageResponse'
      tags:
        - 文件
      security:
        - Authorization: []
      description: 触发打包动作
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilePackageRequest'
  '/course/{courseId}/resources':
    parameters:
      - schema:
          type: integer
          format: int32
        name: courseId
        in: path
        required: true
    get:
      summary: 获取课程所属的所有课程资源
      tags:
        - 课程资源
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseResourceResponse'
      operationId: get-course-courseId-resource
      security:
        - Authorization: []
      description: 获取课程所属的所有课程资源
      parameters:
        - schema:
            type: string
          in: query
          name: type
          description: '表示获取的课程资源类型，如果该值为空，则表示两种资源都获取。CourseResource, ExperimentResource'
    delete:
      summary: 批量删除课程资源
      operationId: delete-course-courseId-resources
      responses:
        '200':
          description: OK
      tags:
        - 课程资源
      description: 批量删除课程资源
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCourseResourcesRequest'
  '/course/{courseId}/resource/{resourceId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: courseId
        in: path
        required: true
      - schema:
          type: integer
          format: int32
        name: resourceId
        in: path
        required: true
    delete:
      summary: 删除课程资源
      operationId: delete-course-courseId-resource-resourceId
      responses:
        '200':
          description: OK
      tags:
        - 课程资源
      description: 删除课程资源
      security:
        - Authorization: []
  '/course/{courseId}':
    parameters:
      - schema:
          type: string
        name: courseId
        in: path
        required: true
    get:
      summary: 获取课程信息
      tags:
        - 课程
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseResponse'
      operationId: get-course-courseId
      description: 获取课程信息
      security:
        - Authorization: []
  /courses:
    get:
      summary: 管理员获取所有课程
      tags:
        - 课程
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseResponse'
      operationId: get-course-list
      security:
        - Authorization: []
      description: 管理员获取所有课程
  '/stat/exp/{expId}/assignments':
    parameters:
      - schema:
          type: integer
          format: int32
        name: expId
        in: path
        required: true
    get:
      summary: 统计某门实验的提交作业的情况
      tags:
        - 统计
        - 作业
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatExpAssignmentResponse'
      operationId: get-stat-exp-expId-assignment
      description: 统计某门实验的提交作业的情况（该课程的助教或教师调用）
      security:
        - Authorization: []
  '/stat/course/{courseId}/experiments':
    parameters:
      - schema:
          type: integer
          format: int32
        name: courseId
        in: path
        required: true
    get:
      summary: 获取课程中所有实验的统计信息
      tags:
        - 统计
        - 课程
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatCourseExpsResponse'
      operationId: get-stat-course-courseId-experiments
      description: 获取课程中所有实验的统计信息，本课程的助教或教师调用
      security:
        - Authorization: []
  /experiments:
    get:
      summary: 获取实验信息列表
      tags:
        - 作业
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExperimentResponse'
      operationId: get-experiments
      description: 学生获取属于自己的实验信息列表
      security:
        - Authorization: []
      parameters:
        - schema:
            type: integer
            format: int32
          in: query
          name: termId
          description: 学期序号。该值缺失，或小于等于0时，将默认获取最新学期的信息
        - schema:
            type: boolean
          in: query
          name: submitted
          description: 当为true时，表示获取已完成的实验列表；为false时，表示获取未完成的实验列表；缺失时，表示同时获取已完成和未完成的实验列表。
        - schema:
            type: integer
          in: query
          name: courseId
          description: 当为空或不合法时，获取所有符合上述条件的课程的实验列表
    parameters: []
  /experiment:
    post:
      summary: 创建实验/作业
      operationId: post-experiment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentResponse'
      tags:
        - 作业
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExperimentRequest'
      description: 创建实验/作业
  /experiments/names:
    get:
      summary: 获取实验名称列表
      tags:
        - 作业
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      operationId: get-experiments-names
      description: 获取实验名称列表
      parameters:
        - schema:
            type: integer
          in: query
          name: courseId
          description: 指定课程
  '/experiment/{experimentId}/selectStandardAssignments':
    post:
      summary: 获取需要作为互评标准作业的作业
      operationId: post-experiment-selectStandardAssignments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentWithStandardScoreResponse'
      description: 获取需要作为互评标准作业的8份作业，如果没有就创建（助教或教师调用）
      security:
        - Authorization: []
      parameters: []
      tags:
        - 互评
    parameters:
      - schema:
          type: integer
          format: int32
        name: experimentId
        in: path
        required: true
  '/experiment/{experimentId}/enablePeer':
    post:
      summary: 为一项实验正式开启互评
      operationId: post-experiment-enablePeer
      responses:
        '200':
          description: OK
      description: 为一项实验正式开启互评
      security:
        - Authorization: []
      parameters: []
      tags:
        - 互评
    parameters:
      - schema:
          type: integer
          format: int32
        name: experimentId
        in: path
        required: true
  /peerAssessment:
    post:
      summary: 为一个作业评分
      operationId: post-peerAssessment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentInfoResponse'
      tags:
        - 互评
      description: 为一项作业评分
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePeerAssessmentRequest'
    get:
      summary: 获取某个作业的互评信息
      operationId: get-peerAssessment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentPeerAssessmentResultResponse'
      tags:
        - 互评
      description: 获取某个作业的互评信息
      parameters:
        - schema:
            type: integer
            format: int32
          in: query
          name: assignmentId
          required: true
  /peerTasks:
    get:
      summary: 获取属于自己的互评任务
      tags:
        - 互评
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentPeerTaskResponse'
      operationId: get-peerTasks
      description: 学生获取属于自己的互评任务
      security:
        - Authorization: []
      parameters:
        - schema:
            type: integer
            format: int32
          in: query
          name: expId
          required: true
    parameters: []
  /peerAppeal:
    post:
      summary: 提起申诉
      operationId: post-peerAppeal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeerAppealResponse'
      tags:
        - 互评
      description: 学生提起申诉
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePeerAppealRequest'
  '/peerAppeal/{peerAppealId}':
    parameters:
      - schema:
          type: integer
          format: int32
        name: peerAppealId
        in: path
        required: true
    get:
      summary: 查看一项互评申诉
      tags:
        - 互评
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeerAppealResponse'
      operationId: get-peerAppeal-peerAppealId
      security:
        - Authorization: []
      description: 查看一项互评申诉
    delete:
      summary: 删除一项互评申诉
      operationId: delete-peerAppeal-peerAppealId
      responses:
        '200':
          description: OK
      security:
        - Authorization: []
      tags:
        - 互评
      description: 删除一项互评申诉（学生主动撤销）
    patch:
      summary: 修改互评申诉
      operationId: patch-peerAppeal-peerAppealId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeerAppealResponse'
      tags:
        - 互评
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPeerAppealRequest'
      description: 两种应用场景：学生修改申诉的内容；教师或助教处理申诉
      security:
        - Authorization: []
  /peerAppeals:
    get:
      summary: 获取互评申诉列表
      tags:
        - 互评
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PeerAppealResponse'
      operationId: get-peerAppeals
      description: 获取互评申诉列表
      security:
        - Authorization: []
      parameters:
        - schema:
            type: integer
            format: int32
          in: query
          name: expId
          required: true
        - schema:
            type: integer
          in: query
          name: studentId
          description: 如果调用者为学生，那么即使设置了该字段，也会被忽略
  /assignmentReviews:
    post:
      summary: 保存评阅作业记录
      operationId: post-assignmentReviews
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignmentReviewResponse'
      tags:
        - 作业
      description: 保存评阅记录记录
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentReviewRequest'
    delete:
      summary: 删除某个作业的所有评阅记录
      operationId: delete-assignmentReviews
      responses:
        '200':
          description: OK
      description: 删除某个作业的所有评阅记录
      tags:
        - 作业
      security:
        - Authorization: []
      parameters:
        - schema:
            type: integer
            format: int32
          in: query
          name: assignmentId
    get:
      summary: 获取一项作业的评阅记录
      operationId: get-assignmentReviews
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignmentReviewResponse'
      tags:
        - 作业
      description: 获取一项作业的评阅记录
      security:
        - Authorization: []
      parameters:
        - schema:
            type: integer
            format: int32
          in: query
          name: assignmentId
  /authentications:
    get:
      summary: 校验token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authentication'
      operationId: get-authentications
      description: 校验token
      security:
        - Authorization: []
      tags:
        - 鉴权
  '/vm/{vmId}':
    parameters:
      - schema:
          type: string
        name: vmId
        in: path
        required: true
        description: vm uuid
    get:
      summary: get vm by uuid
      tags:
        - 虚拟机
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
      operationId: get-vm-vmId
      security:
        - Authorization: []
      description: 根据UUID获取虚拟机信息
  '/vm/{vmId}/power':
    parameters:
      - schema:
          type: string
        name: vmId
        in: path
        required: true
        description: vm uuid
    patch:
      summary: 虚拟机开关机
      operationId: patch-vm-vmId-power
      responses:
        '200':
          description: OK
      description: 对虚拟机进行开关机操作
      tags:
        - 虚拟机
      security:
        - Authorization: []
      parameters:
        - schema:
            type: string
          in: query
          name: action
          required: true
          description: powerOn 表示开机；powerOff 表示关机
        - schema:
            type: boolean
          in: query
          name: sync
          description: 表示该请求是否同步返回，默认为false，即默认异步。client需要在后续查询具体的执行情况
  /vms:
    get:
      summary: get Virtual Machine list
      tags:
        - 虚拟机
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VirtualMachine'
      operationId: get-vms
      description: 获取符合条件的所有虚拟机
      security:
        - Authorization: []
      parameters:
        - schema:
            type: string
          in: query
          name: studentId
        - schema:
            type: string
          in: query
          name: teacherId
        - schema:
            type: integer
            format: int32
          in: query
          name: experimentId
  /file/package/result:
    get:
      summary: 查询文件打包的结果
      tags:
        - 文件
      responses:
        '201':
          description: Created
        '204':
          description: No Content
      operationId: get-file-package-result
      description: 获取文件打包的结果
      security:
        - Authorization: []
      parameters:
        - schema:
            type: string
          in: query
          name: packageId
          required: true
  /vms/apply:
    post:
      summary: 创建虚拟机申请
      operationId: post-vms-apply
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVmApplyResponse'
      tags:
        - 虚拟机
      description: |-
        学生、教师为自己申请虚拟机
        或教师或助教为实验课程申请虚拟机
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVmApplyRequest'
    get:
      summary: 查看“创建虚拟机的申请”
      operationId: get-vms-apply
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateVmApplyResponse'
      tags:
        - 虚拟机
      description: |-
        用户查看所有与自己有关的创建虚拟机的申请
        ！！！注意，该接口返回的是一个数组！！！
      security:
        - Authorization: []
  '/vms/apply/{applyId}':
    get:
      summary: 查看“创建虚拟机的申请”
      operationId: get-vm-apply
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateVmApplyResponse'
      tags:
        - 虚拟机
      description: 查看“创建虚拟机的申请”
      security:
        - Authorization: []
    patch:
      summary: 管理员处理“创建虚拟机的申请”
      operationId: patch-vms-apply
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVmApplyResponse'
      tags:
        - 虚拟机
      security:
        - Authorization: []
      parameters:
        - schema:
            type: boolean
          in: query
          name: approve
          required: true
        - schema:
            type: string
          in: query
          name: reply
          required: true
          description: 审批回复信息
      description: 管理员处理“创建虚拟机的申请”
    parameters:
      - schema:
          type: string
        name: applyId
        in: path
        required: true
  '/vms/apply/{applyId}/vms':
    patch:
      summary: 修改“虚拟机创建申请”中的虚拟机情况
      operationId: patch-vms-apply-vms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVmApplyResponse'
      tags:
        - 虚拟机
      security:
        - Authorization: []
      parameters: []
      description: |-
        修改“虚拟机创建申请”中的虚拟机个数
        例如，可以使用此接口为已经审批通过的申请创建添加新的虚拟机，但不可删除
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchVmApplyVms'
    parameters:
      - schema:
          type: string
        name: applyId
        in: path
        required: true
    delete:
      summary: 删除“虚拟机创建申请”中的虚拟机
      operationId: delete-vms-apply-applyId-vms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVmApplyResponse'
      tags:
        - 虚拟机
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteVmApplyVms'
      description: 删除“虚拟机创建申请”中的虚拟机
  /vm/template:
    get:
      summary: 获取当前可用的所有虚拟机模板
      tags:
        - 虚拟机
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VirtualMachine'
      operationId: get-vm-template
      description: |-
        获取当前可用的所有虚拟机模板
        返回的是一个数组

        该接口已被启用，请使用 GET /vm/templates
      security:
        - Authorization: []
      deprecated: true
    post:
      summary: 创建虚拟机模板
      operationId: post-vm-template
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineTemplate'
      tags:
        - 虚拟机
      description: |-
        创建虚拟机模板，本质上是将虚拟机转换为模板

        前端应注意，在调用该接口前，应该提示用户先将虚拟机关机，并提示用户，该操作将删除当前虚拟机
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                uuid:
                  type: string
                  description: 需要转换的虚拟机的UUID
                name:
                  type: string
                  description: 转换出来的模板的名称
              required:
                - uuid
                - name
  /vm/templates:
    get:
      summary: 获取当前用户可用的所有虚拟机模板
      tags:
        - 虚拟机
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VirtualMachineTemplate'
      operationId: get-vm-templates
      description: |-
        获取当前可用的所有虚拟机模板
        返回的是一个数组

        逻辑是：
        1. 如果是管理员，返回所有的虚拟机模板
        2. 如果是教师，返回所有公共模板、该教师自己制作的所有模板、该教师的助教制作的所有模板
        3. 如果是学生，
          a. 如果是助教，返回所有公共模板、该学生自己制作的所有模板、助教所属课程的教师制作的所有模板
          b. 如果不是助教，返回所有公共模板、该学生自己制作的所有模板

        前端在使用该接口时，可以考虑在具体场景中，对获取到的列表做进一步的过滤
      security:
        - Authorization: []
    parameters: []
  /paasUser:
    post:
      summary: 在各个PaaS相关后端中创建用户
      operationId: post-paasUser
      responses:
        '200':
          description: OK
      description: |-
        在各个PaaS相关后端中创建用户。
        该接口是幂等的，可多次重复调用而没有副作用。
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: 学工号
              required:
                - userId
      tags:
        - 项目
      deprecated: true
  /projects:
    get:
      summary: 获取项目列表
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
      operationId: get-projects
      tags:
        - 项目
      description: 获取项目列表
      security:
        - Authorization: []
      parameters:
        - schema:
            type: integer
          in: query
          name: expId
          description: 如果该值为空，则默认返回该用户创建或参与的所有项目
    post:
      summary: 创建新项目
      operationId: post-projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      tags:
        - 项目
      description: 接口调用者为自己创建一个新项目
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                expId:
                  type: integer
                displayName:
                  type: string
                description:
                  type: string
                isPersonal:
                  type: boolean
                  description: 表示是否是个人项目，默认为false
              required:
                - displayName
          application/xml:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: |-
                    项目名称，
                    不允许使用与他人或自己重复的项目名称，
                    且项目名称必须符合 RFC1035 规范
                expId:
                  type: integer
                  format: int32
                isPersonal:
                  type: boolean
                  description: 是否是个人项目。个人项目不允许添加其他成员。默认为false
              required:
                - name
        description: ''
      security:
        - Authorization: []
  '/project/{projectId}':
    parameters:
      - schema:
          type: integer
        name: projectId
        in: path
        required: true
    get:
      summary: 查看某一项目详情
      tags:
        - 项目
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
      operationId: get-project-projectId
      description: 查看某一项目详情
      security:
        - Authorization: []
  '/project/{projectId}/members':
    parameters:
      - schema:
          type: integer
          format: int64
        name: projectId
        in: path
        required: true
    get:
      summary: 获取项目中的所有成员
      tags:
        - 项目
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectMember'
      operationId: get-project-projectId-members
      description: 获取项目中的所有成员
      security:
        - Authorization: []
    post:
      summary: 添加项目成员
      operationId: post-project-projectId-members
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMember'
      tags:
        - 项目
      description: |-
        添加项目成员
        仅支持项目管理员操作
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                role:
                  type: string
                  description: 枚举值，OWNER，ADMIN，MEMBER
              required:
                - userId
                - role
    delete:
      summary: 从项目中移除成员
      operationId: delete-project-projectId-members
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMember'
      tags:
        - 项目
      description: 从项目中移除成员
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
              required:
                - userId
  '/project/{projectId}/images':
    parameters:
      - schema:
          type: string
        name: projectId
        in: path
        required: true
    post:
      summary: 构建镜像
      operationId: post-project-projectId-images
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageBuilder'
      description: 构建镜像。该接口异步返回。
      tags:
        - 镜像
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                tag:
                  type: string
                  description: 默认 latest
                gitUrl:
                  type: string
                gitUsername:
                  type: string
                gitPassword:
                  type: string
                gitRef:
                  type: string
                contextS3ObjectKey:
                  type: string
                  description: 构建上下文压缩包在云平台数据库中对应的文件ID
                  format: int32
                contextFileLink:
                  type: string
                  description: 构建上下文压缩包的网络路径
                dockerfilePath:
                  type: string
                dockerfileContent:
                  type: string
                workspacePath:
                  type: string
                  description: 构建镜像时，workspace相对于上下文的相对路径。默认为.
              required:
                - name
            examples:
              Example 1:
                value:
                  name: string
                  tag: string
                  gitUrl: string
                  gitUsername: string
                  gitPassword: string
                  gitRef: string
                  contextS3ObjectKey: string
                  contextFileLink: string
                  dockerfilePath: string
                  dockerfileContent: string
                  workspacePath: string
    get:
      summary: 获取项目中的镜像列表
      operationId: get-project-projectId-images
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'
      security:
        - Authorization: []
      description: 获取当前项目中的所有可用镜像
      tags:
        - 镜像
  '/project/{projectId}/imageBuilders':
    parameters:
      - schema:
          type: string
        name: projectId
        in: path
        required: true
    get:
      summary: 获取镜像构建任务
      tags:
        - 镜像
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageBuilder'
      operationId: get-project-projectId-imageBuilders
      description: 获取当前项目下的所有镜像构建任务
      security:
        - Authorization: []
  '/project/{projectId}/repos':
    parameters:
      - schema:
          type: string
        name: projectId
        in: path
        required: true
    get:
      summary: 获取项目下的代码仓库列表
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Repository'
      operationId: get-project-projectId-repos
      description: 获取代码仓库列表
      security:
        - Authorization: []
      tags:
        - 代码仓库
    post:
      summary: 创建代码仓库
      operationId: post-project-projectId-repos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
      tags:
        - 项目
      description: 在指定项目中创建代码仓库
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                  maxLength: 254
                private:
                  type: boolean
                gitignores:
                  type: string
                license:
                  type: string
              required:
                - name
                - private
            examples:
              Example 1:
                value:
                  name: string
                  description: string
                  private: true
                  gitignores: string
                  license: string
  '/project/{projectId}/imageRepos':
    parameters:
      - schema:
          type: string
        name: projectId
        in: path
        required: true
    get:
      summary: 获取Harbor镜像仓库
      tags:
        - 镜像
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ImageRepo'
      operationId: get-project-projectId-imageRepos
      description: 获取当前项目下的所有Harbor镜像仓库
      security:
        - Authorization: []
  /captcha:
    get:
      summary: 获取验证码
      tags:
        - 鉴权
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  image:
                    type: string
                    description: base64编码后的png图片
                required:
                  - token
                  - image
      operationId: get-captcha
      description: 获取验证码
  /login:
    post:
      summary: 浏览器登录
      operationId: post-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginUserResponse'
      tags:
        - 鉴权
      description: 浏览器登录
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                password:
                  type: string
                captchaToken:
                  type: string
                captchaText:
                  type: string
              required:
                - userId
                - password
                - captchaToken
                - captchaText
    parameters: []
  /whoami:
    get:
      summary: whoami
      tags:
        - 鉴权
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginUserResponse'
      operationId: get-whoami
      description: whoami，通过当前token，得知当前用户的基本信息
      security:
        - Authorization: []
      parameters:
        - schema:
            type: boolean
          in: query
          name: listProjects
  /buaaSSOLogin:
    post:
      summary: 统一认证登录
      operationId: post-buaaSSOLogin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginUserResponse'
      tags:
        - 鉴权
      description: 统一认证登录
      parameters:
        - schema:
            type: string
          in: query
          name: ssoToken
          required: true
  /students:
    get:
      summary: 获取学生列表
      tags:
        - 人员
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserModel'
      operationId: get-students
      description: |-
        获取学生列表。仅限管理员、教师调用。
        按照学生学号倒序排列（新注册的学生排序靠前）
      security:
        - Authorization: []
      parameters:
        - schema:
            type: string
          in: query
          name: search
          description: 支持按照学号和姓名模糊搜索学生
        - schema:
            type: integer
          in: query
          name: limit
          description: '-1表示无限制。默认为10'
  /resourcePools:
    parameters: []
    get:
      summary: 获取资源池列表
      operationId: get-resourcePools
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      tags:
        - 容器服务
      description: |-
        用户获取自己所属的资源池列表。
        如果是管理员调用的话，则返回当前所有用户的资源池情况。
      security:
        - Authorization: []
  '/project/{projectId}/resourcePools':
    parameters:
      - schema:
          type: string
        name: projectId
        in: path
        required: true
    get:
      summary: 获取当前项目可用的资源池列表
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      operationId: get-project-projectId-resourcePools
      tags:
        - 容器服务
        - 项目
      description: |-
        获取当前项目可用的资源池列表
        即把当前项目中所有用户的所有资源池列表总和
      security:
        - Authorization: []
  '/daemon/trigger/{action}':
    post:
      summary: 守护进程触发
      operationId: post-daemon-trigger
      responses:
        '200':
          description: OK
      description: 仅限管理员调用的守护进程任务触发调用动作
      tags:
        - General
      security:
        - Authorization: []
    parameters:
      - schema:
          type: string
        name: action
        in: path
        required: true
        description: 需要触发的具体动作
  /containerServiceTemplates:
    get:
      summary: 获取容器服务模板列表
      tags:
        - 容器服务
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    categoryName:
                      type: string
                    segments:
                      type: array
                      items:
                        type: object
                        properties:
                          segmentName:
                            type: string
                          templateList:
                            type: array
                            items:
                              $ref: '#/components/schemas/ContainerServiceTemplate'
                        required:
                          - segmentName
                          - templateList
                  required:
                    - categoryName
                    - segments
      operationId: get-containerServiceTemplates
      description: 获取容器服务模板列表
      security:
        - Authorization: []
  /containerServices:
    get:
      summary: 获取所有容器服务列表
      tags:
        - 容器服务
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContainerServiceResponse'
      operationId: get-containerServices
      description: 获取当前用户所归属的所有项目的所有容器服务列表的总和
      security:
        - Authorization: []
  /file/s3/uploader:
    post:
      summary: 创建一个用于上传文件到S3的配置
      operationId: post-file-s3-uploader
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3Config'
      tags:
        - 文件
      security:
        - Authorization: []
      description: |-
        创建一个上传该文件的s3用户
        并返回上传到s3所需要的所有配置
      parameters:
        - schema:
            type: string
          in: query
          name: fileType
          required: true
        - schema:
            type: string
          in: query
          name: owner
          required: true
        - schema:
            type: integer
          in: query
          name: involvedId
          required: true
        - schema:
            type: integer
          in: query
          name: fileId
        - schema:
            type: string
          in: query
          name: originalName
          required: true
          description: 要上传的文件的原始文件名
  /repos/name/exist:
    get:
      summary: 检查git仓库名称是否重复
      tags:
        - 项目
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      operationId: get-repos-name-exist
      description: 检查git仓库名称是否重复
      parameters:
        - schema:
            type: string
          in: query
          name: name
          required: true
      security:
        - Authorization: []
  '/experiment/{experimentId}/workflowConfiguration':
    parameters:
      - schema:
          type: integer
        name: experimentId
        in: path
        required: true
    get:
      summary: 获取某项实验的Workflow配置
      tags:
        - 项目
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentWorkflowConfigurationResponse'
      operationId: get-experiment-experimentId-workflowConfiguration
      description: 获取某项实验的Workflow配置
      security:
        - Authorization: []
    post:
      summary: 创建某项实验的Workflow配置
      operationId: post-experiment-experimentId-workflowConfiguration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentWorkflowConfigurationResponse'
      tags:
        - 项目
      description: 创建某项实验的Workflow配置
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperimentWorkflowConfigurationRequest'
  /logs:
    post:
      summary: 搜索日志记录
      operationId: post-logs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogRecordSearchResponse'
      description: |-
        搜索日志记录
        仅限管理员调用
      security:
        - Authorization: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogRecordSearchRequest'
      tags:
        - 日志管理
  /checkPermission:
    get:
      summary: 检查是否有对某一实体的操作权限
      tags:
        - 鉴权
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      operationId: get-checkPermission
      description: 检查是否有对某一实体的操作权限
      security:
        - Authorization: [ ]
      parameters:
        - schema:
            type: string
          in: query
          name: entityType
        - schema:
            type: integer
            format: int64
          in: query
          name: entityId
        - schema:
            type: string
          in: query
          name: action
          description: 'read, write, admin'
components:
  schemas:
    AssignmentResponse:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 22
          studentId: '15131049'
          fileId: 40
          expId: 1062
          courseId: 438
          createdAt: 1643361519220
          updatedAt: 1643363133061
      properties:
        id:
          type: integer
        studentId:
          type: string
          minLength: 1
        expId:
          type: integer
        courseId:
          type: integer
        file:
          $ref: '#/components/schemas/FileResponse'
        createdAt:
          type: integer
          format: int64
          description: 长整型时间戳
        updatedAt:
          type: integer
          format: int64
          description: 长整型时间戳
        peerScore:
          type: number
          format: double
        finalScore:
          type: number
          format: double
        assignmentReview:
          $ref: '#/components/schemas/AssignmentReviewResponse'
      required:
        - id
        - studentId
        - expId
        - courseId
        - createdAt
        - updatedAt
    AssignmentWithStandardScoreResponse:
      description: 附带“标准成绩”的Assignment Response
      type: object
      x-examples:
        example-1:
          id: 22
          studentId: '15131049'
          fileId: 40
          expId: 1062
          courseId: 438
          createdAt: 1643361519220
          updatedAt: 1643363133061
      title: AssignmentWithStandardScoreResponse
      properties:
        id:
          type: integer
        studentId:
          type: string
          minLength: 1
        expId:
          type: integer
        courseId:
          type: integer
        file:
          $ref: '#/components/schemas/FileResponse'
        createdAt:
          type: integer
          format: int64
          description: 长整型时间戳
        updatedAt:
          type: integer
          format: int64
          description: 长整型时间戳
        peerInfo:
          $ref: '#/components/schemas/AssessmentInfoResponse'
      required:
        - id
        - studentId
        - expId
        - courseId
        - createdAt
        - updatedAt
    FileResponse:
      description: ''
      type: object
      x-examples:
        example-2:
          id: 0
          name: string
          uploadTime: -9223372036854776000
          fileType: string
          fileSize: -9223372036854776000
          uploader: string
          owner: string
          downloadLink: 'http://example.com'
          createdAt: -9223372036854776000
          updatedAt: -9223372036854776000
          contentType: string
          involveId: -2147483648
      properties:
        id:
          type: integer
        name:
          type: string
          minLength: 1
        uploadTime:
          type: integer
          format: int64
        fileType:
          type: string
          minLength: 1
          description: 文件类型，枚举值，可选：Assignment
        fileSize:
          type: integer
          format: int64
          description: 文件大小，长整型
        uploader:
          type: string
          minLength: 1
        owner:
          type: string
          minLength: 1
        downloadLink:
          type: string
          format: uri
        createdAt:
          type: integer
          format: int64
        updatedAt:
          type: integer
          format: int64
        contentType:
          type: string
          description: mimeType
        involveId:
          type: integer
          format: int32
      required:
        - id
        - name
        - uploadTime
        - fileType
        - fileSize
        - uploader
        - owner
        - downloadLink
        - createdAt
        - updatedAt
        - contentType
        - involveId
    AssignmentRequest:
      title: AssignmentRequest
      type: object
      description: ''
      properties:
        studentId:
          type: string
      required:
        - studentId
    PatchAssignmentRequest:
      title: PatchAssignmentRequest
      type: object
      properties:
        fileId:
          type: integer
          format: int32
        finalScore:
          type: number
          format: double
    UploadFileRequest:
      title: UploadFileRequest
      type: object
      properties:
        file:
          type: string
          format: binary
        owner:
          type: string
        fileType:
          type: string
          example: Assignment
          description: 枚举值，可以取值 Assignment
        involvedId:
          type: integer
          format: int32
        fileId:
          type: integer
          format: int32
          description: 可选，如果为空，则表示创建新文件；如果不为空，表示修改旧文件
      required:
        - owner
        - fileType
        - involvedId
    FilePackageResponse:
      title: FilePackageResponse
      type: object
      properties:
        packageId:
          type: string
        packageName:
          type: string
      required:
        - packageId
        - packageName
    FilePackageRequest:
      title: FilePackageRequest
      type: object
      properties:
        fileType:
          type: string
          example: 'Assignment, Resource'
        involvedId:
          type: integer
          format: int32
          description: 关联的实体ID
        fileIdList:
          type: array
          items:
            type: integer
            format: int32
      required:
        - fileType
        - involvedId
      description: fileIdList指定只打包哪些文件。当fileIdList不为空时，仅打包list中指定的文件（但此时list中的fileId必须合法，即必须确定是与对应的实体相关联的）；当其为空时，则打包所有相关文件。
    UploadFileResponse:
      title: UploadFileResponse
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileResponse'
    CourseResourceResponse:
      title: CourseResourceResponse
      type: object
      properties:
        id:
          type: integer
          format: int32
        courseId:
          type: integer
          format: int32
        file:
          $ref: '#/components/schemas/FileResponse'
        experimentId:
          type: integer
          description: 当该值为0时，表示该资源不是从属某一门实验的资源
      required:
        - id
        - courseId
        - file
        - experimentId
    DeleteCourseResourcesRequest:
      title: DeleteCourseResourcesRequest
      type: object
      properties:
        idList:
          type: array
          items:
            type: integer
            format: int32
      required:
        - idList
    ExperimentResponse:
      type: object
      x-examples: {}
      title: ExperimentResponse
      properties:
        id:
          type: integer
        name:
          type: string
          minLength: 1
        type:
          type: boolean
        detail:
          type: string
          minLength: 1
        resourceFile:
          $ref: '#/components/schemas/FileResponse'
        createTime:
          type: string
          minLength: 1
        startTime:
          type: string
          minLength: 1
        endTime:
          type: string
          minLength: 1
        deadline:
          type: string
          minLength: 1
        isPeerAssessment:
          type: boolean
        peerAssessmentDeadline:
          type: string
        appealDeadline:
          type: string
        peerAssessmentRules:
          type: string
        peerAssessmentStart:
          type: boolean
        sentEmail:
          type: boolean
        course:
          $ref: '#/components/schemas/CourseResponse'
        vm:
          $ref: '#/components/schemas/ExpVmInfo'
        workflowExperimentConfiguration:
          $ref: '#/components/schemas/ExperimentWorkflowConfigurationResponse'
      required:
        - id
        - name
        - type
        - detail
        - createTime
        - startTime
        - endTime
        - deadline
        - isPeerAssessment
        - peerAssessmentDeadline
        - appealDeadline
        - peerAssessmentRules
        - peerAssessmentStart
        - sentEmail
        - course
    StatCourseExp:
      description: ''
      type: object
      x-examples: {}
      title: ''
      properties:
        id:
          type: integer
        name:
          type: string
          minLength: 1
        type:
          type: boolean
          description: 表示是实验还是作业。false表示是作业，true表示是实验
        detail:
          type: string
          minLength: 1
        createTime:
          type: string
          minLength: 1
        startTime:
          type: string
          minLength: 1
        endTime:
          type: string
          minLength: 1
        deadline:
          type: string
          minLength: 1
        isPeerAssessment:
          type: boolean
        peerAssessmentDeadline:
          type: string
        appealDeadline:
          type: string
        peerAssessmentRules:
          type: string
        peerAssessmentStart:
          type: boolean
        sentEmail:
          type: boolean
        vm:
          $ref: '#/components/schemas/ExpVmInfo'
        submittedAssignmentsCnt:
          type: integer
          format: int32
          description: 已提交作业的人数
      required:
        - id
        - name
        - type
        - detail
        - createTime
        - startTime
        - endTime
        - deadline
        - isPeerAssessment
        - peerAssessmentDeadline
        - appealDeadline
        - peerAssessmentRules
        - peerAssessmentStart
        - sentEmail
        - submittedAssignmentsCnt
    CourseResponse:
      description: ''
      type: object
      x-examples: {}
      properties:
        id:
          type: integer
        name:
          type: string
          minLength: 1
        teacher:
          type: string
          description: 任课教师姓名
        term:
          $ref: '#/components/schemas/TermModel'
        createTime:
          type: string
          minLength: 1
        departmentId:
          type: string
          minLength: 1
        studentCnt:
          type: integer
          description: 本门课的学生人数
      required:
        - id
        - name
        - teacher
        - term
        - createTime
        - departmentId
    AssignmentListResponse:
      title: AssignmentListResponse
      type: object
      properties:
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentResponse'
      required:
        - assignments
    StatExpAssignmentResponse:
      title: StatExpAssignmentResponse
      description: 统计某门实验的提交作业的情况
      type: object
      properties:
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/StatExpAssignmentResponseAssignments'
    StatCourseExpsResponse:
      title: StatCourseExpsResponse
      type: object
      description: 某门课程中所有实验的详细统计信息
      properties:
        course:
          $ref: '#/components/schemas/CourseResponse'
        teacher:
          $ref: '#/components/schemas/UserModel'
        exps:
          type: array
          items:
            $ref: '#/components/schemas/StatCourseExp'
        studentCnt:
          type: integer
          format: int32
      required:
        - course
        - teacher
        - exps
        - studentCnt
    UserModel:
      title: UserModel
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        department:
          type: integer
          format: int32
        email:
          type: string
          format: email
        role:
          type: string
          example: 枚举值，teacher or student
      required:
        - id
        - name
        - department
        - email
        - role
    TermModel:
      title: TermModel
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    ExpVmInfo:
      title: ExpVmInfo
      type: object
      description: 某次实验所分配的虚拟机情况
      properties:
        applyId:
          type: string
          format: int32
        expectedNum:
          type: integer
          format: int32
        actualNum:
          type: integer
          format: int32
        status:
          type: integer
          description: 虚拟机申请状态
          format: int32
      required:
        - applyId
        - expectedNum
        - actualNum
        - status
    CreateExperimentRequest:
      title: CreateExperimentRequest
      type: object
      properties:
        courseId:
          type: integer
        name:
          type: string
        type:
          type: boolean
          description: 表示是“实验”还是“作业”
        startTime:
          type: string
        endTime:
          type: string
        deadline:
          type: string
        description:
          type: string
        enablePeer:
          type: boolean
        peerDescription:
          type: string
        peerEndTime:
          type: string
        peerAppealDeadline:
          type: string
      required:
        - courseId
        - name
        - type
        - startTime
        - endTime
        - deadline
        - enablePeer
    PutExperimentRequest:
      title: PutExperimentRequest
      type: object
      properties:
        name:
          type: string
        type:
          type: boolean
          description: 表示是“实验”还是“作业”
        startTime:
          type: string
        endTime:
          type: string
        deadline:
          type: string
        description:
          type: string
        enablePeer:
          type: boolean
        peerDescription:
          type: string
        peerEndTime:
          type: string
        peerAppealDeadline:
          type: string
        courseId:
          type: integer
          description: 该值在目前的处理逻辑中会被忽略
      required:
        - name
        - type
        - startTime
        - endTime
        - deadline
        - enablePeer
    CreatePeerAssessmentRequest:
      title: CreatePeerAssessmentRequest
      type: object
      properties:
        assignmentId:
          type: integer
          format: int32
        score:
          type: number
          format: double
        reason:
          type: string
      required:
        - assignmentId
        - score
    SimpleUser:
      title: SimpleUser
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    AssessmentInfoResponse:
      title: AssessmentInfoResponse
      type: object
      description: 当学生读取该Model时，assessor为空，表示学生不允许读取是谁评阅了自己的作业
      properties:
        assessor:
          $ref: '#/components/schemas/SimpleUser'
        assignmentId:
          type: integer
          format: int32
        score:
          type: number
          format: double
        adjustedScore:
          type: number
          format: double
          description: 调整后的分数
        assessedTime:
          type: integer
          format: int64
        reason:
          type: string
          description: 评分理由，没有理由的也要返回空String
    StudentPeerTaskResponse:
      title: StudentPeerTaskResponse
      type: object
      properties:
        id:
          type: integer
          description: AssignmentId
        file:
          $ref: '#/components/schemas/FileResponse'
        peerInfo:
          $ref: '#/components/schemas/AssessmentInfoResponse'
      required:
        - id
        - file
    AssignmentPeerAssessmentResultResponse:
      title: AssignmentPeerAssessmentResultResponse
      type: object
      properties:
        id:
          type: integer
          format: int32
        peerScore:
          type: number
          format: double
          description: 互评得到的分数
        finalScore:
          type: number
          format: double
          description: 教师干预后的分数
        peerInfoList:
          type: array
          items:
            $ref: '#/components/schemas/AssessmentInfoResponse'
      required:
        - id
        - peerInfoList
    PeerAppealResponse:
      title: PeerAppealResponse
      type: object
      properties:
        id:
          type: integer
          format: int32
        expId:
          type: integer
          format: int32
        studentId:
          type: string
        content:
          type: string
        appealedAt:
          type: integer
          format: int64
        processor:
          $ref: '#/components/schemas/SimpleUser'
        processContent:
          type: string
        processStatus:
          type: integer
          description: |-
            0: 未处理
            1: 批准
            2: 驳回
          format: int32
        processedAt:
          type: integer
          format: int64
      required:
        - id
        - expId
        - studentId
        - content
        - appealedAt
        - processStatus
    CreatePeerAppealRequest:
      title: CreatePeerAppealRequest
      type: object
      properties:
        content:
          type: string
        expId:
          type: integer
          format: int32
      required:
        - content
        - expId
    PatchPeerAppealRequest:
      title: PatchPeerAppealRequest
      type: object
      properties:
        content:
          type: string
        processStatus:
          type: integer
          format: int32
        processContent:
          type: string
    AssignmentReviewResponse:
      title: AssignmentReviewResponse
      type: object
      properties:
        id:
          type: integer
        assignmentId:
          type: integer
          format: int32
        fileId:
          type: integer
          format: int32
        reviewedAt:
          type: integer
          format: int64
        reviewerId:
          type: string
        reviewerName:
          type: string
      required:
        - id
        - assignmentId
        - fileId
        - reviewedAt
        - reviewerId
        - reviewerName
    AssignmentReviewRequest:
      title: AssignmentReviewRequest
      type: object
      properties:
        assignmentId:
          type: integer
          format: int32
        fileId:
          type: integer
          format: int32
      required:
        - assignmentId
        - fileId
    Authentication:
      title: Authentication
      type: object
      properties:
        id:
          type: string
          description: 用户的学工号，小写
        token:
          type: string
      required:
        - id
        - token
    VmNetInfo:
      title: VmNetInfo
      type: object
      properties:
        macAddress:
          type: string
        ipList:
          type: array
          items:
            type: string
      required:
        - macAddress
        - ipList
    VirtualMachine:
      title: VirtualMachine
      type: object
      properties:
        uuid:
          type: string
        platform:
          type: string
        name:
          type: string
        isTemplate:
          type: boolean
        host:
          type: string
        adminId:
          type: string
        studentId:
          type: string
        teacherId:
          type: string
        isExperimental:
          type: boolean
        experimentId:
          type: integer
          format: int32
        applyId:
          type: string
        memory:
          type: integer
          format: int32
          description: MB
        cpu:
          type: integer
          format: int32
        osFullName:
          type: string
        diskNum:
          type: integer
          format: int32
        diskSize:
          type: integer
          format: int64
          description: byte
        powerState:
          type: string
          description: 'suspended, poweredOn, poweredOff'
        overallStatus:
          type: string
          description: 'gray, green, yellow, red'
        netInfos:
          type: array
          items:
            $ref: '#/components/schemas/VmNetInfo'
      required:
        - uuid
        - platform
        - name
        - isTemplate
        - host
        - adminId
        - studentId
        - teacherId
        - isExperimental
        - experimentId
        - applyId
        - memory
        - cpu
        - osFullName
        - diskNum
        - diskSize
        - powerState
        - overallStatus
        - netInfos
    VirtualMachineTemplate:
      title: VirtualMachineTemplate
      type: object
      properties:
        uuid:
          type: string
        platform:
          type: string
        name:
          type: string
        host:
          type: string
        adminId:
          type: string
        studentId:
          type: string
        teacherId:
          type: string
        isExperimental:
          type: boolean
        experimentId:
          type: integer
          format: int32
        memory:
          type: integer
          format: int32
          description: MB
        cpu:
          type: integer
          format: int32
        osFullName:
          type: string
        diskNum:
          type: integer
          format: int32
        diskSize:
          type: integer
          format: int64
          description: byte
        overallStatus:
          type: string
          description: 'gray, green, yellow, red'
      required:
        - uuid
        - platform
        - name
        - host
        - adminId
        - studentId
        - teacherId
        - isExperimental
        - experimentId
        - memory
        - cpu
        - osFullName
        - diskNum
        - diskSize
        - overallStatus
    StatExpAssignmentResponseAssignments:
      title: StatExpAssignmentResponseAssignments
      type: object
      properties:
        studentId:
          type: string
        studentName:
          type: string
        assignment:
          $ref: '#/components/schemas/AssignmentResponse'
      required:
        - studentId
        - studentName
    CreateVmApplyRequest:
      title: CreateVmApplyRequest
      x-stoplight:
        id: qnrdg9ok6otgh
      type: object
      description: ''
      properties:
        studentId:
          type: string
          description: 当学生为自己申请一个不与实验相关的虚拟机时，需设置此字段
        teacherId:
          type: string
          description: 当教师为自己申请一个不与实验相关的虚拟机时，需设置此字段
        experimentId:
          type: integer
          format: int32
          description: 当教师或助教为实验申请虚拟机时，需要使用此字段，并且，如果设置了此字段，同样要设置 studentIdList 字段，表示具体为哪些学生分配虚拟机
        studentIdList:
          type: array
          description: 表示具体为哪些学生分配虚拟机。需要与experimentId字段结合使用
          items:
            type: string
        cpu:
          type: integer
          format: int32
        memory:
          type: integer
          format: int32
          description: MB
        diskSize:
          type: integer
          format: int64
          description: bytes
        templateUuid:
          type: string
          description: 创建虚拟机所使用的模板的UUID
        description:
          type: string
          description: 申请理由
        namePrefix:
          type: string
          description: 生成的虚拟机的名称的前缀
        dueTime:
          type: integer
          format: int64
          description: 使用截止时间
      required:
        - cpu
        - memory
        - diskSize
        - templateUuid
        - description
        - namePrefix
        - dueTime
    CreateVmApplyResponse:
      title: CreateVmApplyResponse
      x-stoplight:
        id: qnrdg9ok6otgh
      type: object
      description: ''
      properties:
        id:
          type: string
        studentId:
          type: string
        teacherId:
          type: string
        applicant:
          type: string
        experimentId:
          type: integer
          format: int32
        studentIdList:
          type: array
          items:
            type: string
        cpu:
          type: integer
          format: int32
        memory:
          type: integer
          format: int32
          description: MB
        diskSize:
          type: integer
          format: int64
          description: bytes
        templateName:
          type: string
          description: 创建虚拟机所使用的模板名称
        description:
          type: string
          description: 申请理由
        applyTime:
          type: integer
          format: int64
          description: 发起申请时的时间戳
        status:
          type: integer
          format: int32
          description: |-
            0，表示还没有被处理
            1，表示允许同意申请
            2，表示拒绝申请
        handleTime:
          type: integer
          format: int64
          description: 管理员处理该申请的时间，时间戳
        expectedNum:
          type: integer
          format: int32
          description: 预期希望得到的虚拟机个数
        actualNum:
          type: integer
          format: int32
          description: 当前实际的虚拟机个数
        namePrefix:
          type: string
          description: 最终生成的虚拟机的名称的前缀
        dueTime:
          type: integer
          format: int64
          description: 虚拟机使用的结束时间
        replyMsg:
          type: string
          description: 管理员审批该申请的回复信息
      required:
        - id
        - studentId
        - teacherId
        - experimentId
        - studentIdList
        - cpu
        - memory
        - diskSize
        - applicant
        - templateName
        - description
        - applyTime
        - status
        - handleTime
        - expectedNum
        - actualNum
        - namePrefix
    PatchVmApplyVms:
      title: PatchVmApplyVms
      x-stoplight:
        id: tc8blp905u4mf
      type: object
      properties:
        studentIdList:
          type: array
          description: 需要为实验中的学生新增虚拟机时，使用该字段
          items:
            type: string
    DeleteVmApplyVms:
      title: DeleteVmApplyVms
      x-stoplight:
        id: 5km93g7eafr7d
      type: object
      properties:
        teacherId:
          type: string
          description: 需要删除教师申请的单个虚拟机时设置此字段
        studentId:
          type: string
          description: 需要删除学生申请的单个虚拟机时设置此字段
        studentIdList:
          type: array
          description: 需要删除批量申请的多个虚拟机时设置此字段
          items:
            type: string
    Repository:
      title: Repository
      x-stoplight:
        id: 5v8tbv93tso16
      type: object
      properties:
        name:
          type: string
          description: 'example: owner_name/repo_name'
        repoName:
          type: string
        owner:
          type: string
          description: 所有者的名称
        url:
          type: string
          description: 代码仓库的URL
        username:
          type: string
        token:
          type: string
      required:
        - name
        - repoName
        - owner
        - url
        - username
        - token
    Project:
      title: Project
      x-stoplight:
        id: 26t0e0o4vj3h3
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        owner:
          type: string
        token:
          type: string
          description: 当前该用户访问该Project中的资源，例如clone代码仓库、push和pull镜像等，所需要使用的token，即密码
        displayName:
          type: string
          description: 区别于name之外的一个格式随便的，便于记忆和展示的名字
        description:
          type: string
        expId:
          type: integer
          format: int32
        createdTime:
          type: integer
          format: int64
      required:
        - id
        - name
        - owner
        - token
        - displayName
        - createdTime
    ProjectMember:
      title: ProjectMember
      x-stoplight:
        id: a7fr60oqy52cw
      type: object
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        userId:
          type: string
        username:
          type: string
        role:
          type: string
          description: '枚举值，OWNER，ADMIN, MEMBER'
      required:
        - id
        - projectId
        - userId
        - username
        - role
    Image:
      title: Image
      x-stoplight:
        id: 5u7u1hhy6ugke
      type: object
      properties:
        hostPrefix:
          type: string
        repo:
          type: string
        digest:
          type: string
        tags:
          type: array
          items:
            type: string
        imageSize:
          type: integer
          format: int64
        pushTime:
          type: integer
          format: int64
        pullTime:
          type: integer
          format: int64
        pullCommand:
          type: string
      required:
        - hostPrefix
        - repo
        - digest
        - tags
        - imageSize
        - pullCommand
    ImageBuilder:
      description: Image builder CRD
      type: object
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
          required:
            - name
            - namespace
          properties:
            name:
              type: string
            namespace:
              type: string
        spec:
          description: BuilderSpec defines the desired state of Builder
          type: object
          required:
            - context
            - destination
          properties:
            context:
              type: object
              properties:
                git:
                  type: object
                  properties:
                    endpoint:
                      type: string
                    ref:
                      type: string
                    scheme:
                      default: https
                      enum:
                        - http
                        - https
                      type: string
                    userPassword:
                      type: string
                    username:
                      type: string
                  required:
                    - endpoint
                raw:
                  type: string
                s3:
                  type: object
                  properties:
                    accessKeyID:
                      type: string
                    accessSecretKey:
                      type: string
                    bucket:
                      type: string
                    endpoint:
                      default: s3.amazonaws.com
                      type: string
                    fileType:
                      enum:
                        - tar
                        - tar.gz
                        - zip
                        - rar
                        - dir
                      type: string
                    objectKey:
                      type: string
                    region:
                      type: string
                    scheme:
                      enum:
                        - http
                        - https
                      type: string
                  required:
                    - accessKeyID
                    - accessSecretKey
                    - bucket
                    - objectKey
                    - region
            destination:
              type: string
            dockerfilePath:
              type: string
            pushSecretName:
              default: push-secret
              type: string
            round:
              default: -1
              type: integer
            workspacePath:
              default: Dockerfile
              type: string
        status:
          description: BuilderStatus defines the observed state of Builder
          type: object
          properties:
            base:
              type: object
              properties:
                currentRound:
                  type: integer
                historyList:
                  description: HistoryList is used to store the history of the CRD.
                  type: array
                  items:
                    type: string
                message:
                  description: Message is mainly used to store the error message when the CRD is failed.
                  type: string
                status:
                  type: string
              required:
                - currentRound
                - status
      required:
        - apiVersion
        - kind
        - metadata
        - spec
      title: ImageBuilder
      x-stoplight:
        id: 5e7705fec62a5
      x-examples: {}
    ImageRepo:
      title: ImageRepo
      x-stoplight:
        id: vsg69k6x0z5m0
      type: object
      properties:
        name:
          type: string
        artifactsCount:
          type: integer
          format: int64
        downloadCount:
          type: integer
          format: int64
        updateTime:
          type: integer
          format: int64
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
      required:
        - name
        - artifactsCount
        - downloadCount
    ContainerServicePort:
      title: ContainerServicePort
      x-stoplight:
        id: 7w8mfpdinzajp
      type: object
      properties:
        name:
          type: string
        port:
          type: integer
          format: int32
        protocol:
          type: string
          description: 'TCP, UDP, SCTP'
        exportIP:
          type: string
        exportPort:
          type: integer
          format: int32
      required:
        - name
        - port
        - protocol
    ContainerResponse:
      title: ContainerResponse
      x-stoplight:
        id: x9luc5bc0qyu9
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        image:
          type: string
        command:
          type: string
        workingDir:
          type: string
        envs:
          type: array
          items:
            $ref: '#/components/schemas/KvPair'
        ports:
          type: array
          items:
            $ref: '#/components/schemas/ContainerServicePort'
        resourcePoolId:
          type: string
        resourceUsedRecordId:
          type: string
      required:
        - id
        - name
        - image
        - resourcePoolId
        - resourceUsedRecordId
    ContainerServiceResponse:
      title: ContainerServiceResponse
      x-stoplight:
        id: 9owvee8mbbtn2
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        creator:
          type: string
        projectId:
          type: integer
          format: int64
        projectName:
          type: string
        templateId:
          type: string
        serviceType:
          type: string
          description: 'SERVICE, JOB'
        status:
          type: string
          description: 'UNDO, NOT_READY, RUNNING, SUCCESS, FAIL'
        containers:
          type: array
          items:
            $ref: '#/components/schemas/ContainerResponse'
        createdTime:
          type: integer
          format: int64
      required:
        - id
        - name
        - creator
        - projectId
        - projectName
        - serviceType
        - containers
        - createdTime
    LoginUserResponse:
      title: LoginUserResponse
      x-stoplight:
        id: zj0j34qb6ra6r
      type: object
      properties:
        userId:
          type: string
        username:
          type: string
        role:
          type: string
        isAssistant:
          type: boolean
        token:
          type: string
        paasToken:
          type: string
        projects:
          type: array
          items:
            type: string
        adminCourses:
          type: array
          items:
            $ref: '#/components/schemas/SimpleCourse'
      required:
        - userId
        - username
        - role
        - isAssistant
        - token
        - paasToken
        - adminCourses
    ContainerServiceTemplate:
      title: ContainerServiceTemplate
      x-stoplight:
        id: 6hpsa0kqu1an1
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
        segment:
          type: string
        config:
          type: array
          items:
            $ref: '#/components/schemas/ContainerServiceTemplateConfigItem'
        description:
          type: string
        iconUrl:
          type: string
      required:
        - id
        - name
        - category
        - config
    ContainerServiceTemplateConfigItem:
      title: ContainerServiceTemplateConfigItem
      x-stoplight:
        id: 59twn7biwwztz
      type: object
      properties:
        label:
          type: string
        name:
          type: string
        type:
          type: string
          description: 'string, number, boolean'
        required:
          type: boolean
        options:
          type: array
          items:
            type: string
        default:
          type: string
        description:
          type: string
      required:
        - label
        - name
        - type
        - required
    KvPair:
      title: KvPair
      x-stoplight:
        id: k4au1tvs40nv7
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      required:
        - name
        - value
    S3Config:
      title: S3Config
      x-stoplight:
        id: 73d056bcec026
      type: object
      x-examples:
        Example 1:
          accessKey: some-access-key-id
          secretKey: some-secret-key
          endpoint: example.com
          scheme: htttps
          bucket: the-bucket
          key: path/to/object
      properties:
        accessKey:
          type: string
        secretKey:
          type: string
        endpoint:
          type: string
        scheme:
          type: string
        bucket:
          type: string
        key:
          type: string
        region:
          type: string
      required:
        - accessKey
        - secretKey
        - endpoint
        - scheme
        - bucket
        - key
        - region
    SimpleCourse:
      title: SimpleCourse
      x-stoplight:
        id: 6d3ivgkgbf3rv
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      required:
        - id
        - name
    ResourceModel:
      title: ResourceModel
      x-stoplight:
        id: mj4dtawsb4n3b
      type: object
      properties:
        cpu:
          type: integer
          format: int32
        memory:
          type: integer
          format: int32
      required:
        - cpu
        - memory
    ExperimentWorkflowConfigurationRequest:
      title: ExperimentWorkflowConfigurationRequest
      x-stoplight:
        id: ho5c03njv0uqc
      type: object
      properties:
        expId:
          type: integer
          format: int32
        resource:
          $ref: '#/components/schemas/ResourceModel'
        configuration:
          type: string
          description: json string
      required:
        - expId
        - resource
        - configuration
    ExperimentWorkflowConfigurationResponse:
      title: ExperimentWorkflowConfigurationResponse
      type: object
      x-stoplight:
        id: 124617067ab3e
      properties:
        id:
          type: integer
          format: int64
        expId:
          type: integer
          format: int32
        resourcePool:
          type: string
          description: name of resourcePool crd
        configuration:
          type: string
          description: json string
      required:
        - id
        - expId
        - resourcePool
        - configuration
    LogRecordSearchRequest:
      title: LogRecordSearchRequest
      x-stoplight:
        id: n9p7xibrk8f8q
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationReq'
        userId:
          type: string
        username:
          type: string
        method:
          type: string
        path:
          type: string
        status:
          type: integer
          format: int32
        errMsg:
          type: string
        timeRange:
          type: string
          description: '字符串格式为 ${start time stamp}-${end time stamp}'
        order:
          type: object
          properties:
            startAt:
              type: string
              enum:
                - ascend
                - descend
            duration:
              type: string
              enum:
                - ascend
                - descend
      required:
        - pagination
      x-examples: {}
    LogRecord:
      title: LogRecord
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        username:
          type: string
        method:
          type: string
        path:
          type: string
        requestHeaders:
          type: string
          description: |-
            应该是如下的格式化后的字符串：

            Host: xxxx
            X-Custom-Header: xxx xxx xxx
            Another-Header: xxxx
        httpVersion:
          type: string
        realIp:
          type: string
        userAgent:
          type: string
        responseStatus:
          type: integer
          format: int32
        errMsg:
          type: string
        responseHeaders:
          type: string
          description: |-
            应该是如下的格式化后的字符串：

            Host: xxxx
            X-Custom-Header: xxx xxx xxx
            Another-Header: xxxx
        startAt:
          type: integer
          format: int64
          description: 发起调用的时间戳
        duration:
          type: integer
          format: int64
          description: 处理请求所花的时间
      required:
        - id
        - method
        - path
        - requestHeaders
        - httpVersion
        - responseHeaders
    PaginationReq:
      title: PaginationReq
      x-stoplight:
        id: 2zh41tukua51n
      type: object
      properties:
        current:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
      required:
        - current
        - pageSize
    LogRecordSearchResponse:
      title: LogRecordSearchResponse
      x-stoplight:
        id: 38hl7btn774l1
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/LogRecord'
        total:
          type: integer
          format: int64
        page:
          type: integer
          format: int32
        success:
          type: boolean
      required:
        - data
        - total
        - page
        - success
  securitySchemes:
    Authorization:
      type: apiKey
      in: header
      description: ''
      name: Authorization
  responses: {}
  requestBodies: {}
